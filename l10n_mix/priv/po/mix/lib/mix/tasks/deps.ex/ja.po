msgid ""
msgstr ""
"Project-Id-Version: l 10n_mix\n"
"PO-Revision-Date: 2015-05-20 22:52+0900\n"
"Last-Translator: 小田 照敬 <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: Elixir.Mix.Tasks.Deps Summary
#: lib/mix/tasks/deps.ex:1
msgid ""
"List all dependencies and their status.\n"
"\n"
"Dependencies must be specified in the `mix.exs` file in one of\n"
"the following formats:\n"
"\n"
"    {app, requirement}\n"
"    {app, opts}\n"
"    {app, requirement, opts}\n"
"\n"
"Where:\n"
"\n"
"  * app is an atom\n"
"  * requirement is a version requirement or a regular expression\n"
"  * opts is a keyword list of options\n"
"\n"
"By default, dependencies are fetched using the [Hex package manager](https://"
"hex.pm/):\n"
"\n"
"    {:plug, \">= 0.4.0\"}\n"
"\n"
"By specifying such dependencies, Mix will automatically install\n"
"Hex (if it wasn't previously installed and download a package\n"
"suitable to your project).\n"
"\n"
"Mix also supports git and path dependencies:\n"
"\n"
"    {:foobar, git: \"https://github.com/elixir-lang/foobar.git\", tag: "
"\"0.1\"}\n"
"    {:foobar, path: \"path/to/foobar\"}\n"
"\n"
"And also in umbrella dependencies:\n"
"\n"
"    {:myapp, in_umbrella: true}\n"
"\n"
"Path and in umbrella dependencies are automatically recompiled by\n"
"the parent project whenever they change. While fetchable dependencies\n"
"like git are recompiled only when fetched/updated.\n"
"\n"
"The dependencies versions are expected to follow Semantic Versioning\n"
"and the requirements must be specified as defined in the `Version`\n"
"module.\n"
"\n"
"Below we provide a more detailed look into the available options.\n"
"\n"
"## Mix options\n"
"\n"
"  * `:app` - when set to false, does not read the app file for this\n"
"    dependency\n"
"\n"
"  * `:env` - the environment to run the dependency on, defaults to :prod\n"
"\n"
"  * `:compile` - a command to compile the dependency, defaults to a mix,\n"
"    rebar or make command\n"
"\n"
"  * `:optional` - the dependency is optional and used only to specify\n"
"    requirements\n"
"\n"
"  * `:only` - the dependency will belong only to the given environments,\n"
"    useful when declaring dev- or test-only dependencies\n"
"\n"
"  * `:override` - if set to true the dependency will override any other\n"
"    definitions of itself by other dependencies\n"
"\n"
"## Git options (`:git`)\n"
"\n"
"  * `:git`        - the git repository URI\n"
"  * `:github`     - a shortcut for specifying git repos from github, uses "
"`git:`\n"
"  * `:ref`        - the reference to checkout (may be a branch, a commit sha "
"or a tag)\n"
"  * `:branch`     - the git branch to checkout\n"
"  * `:tag`        - the git tag to checkout\n"
"  * `:submodules` - when true, initialize submodules for the repo\n"
"\n"
"## Path options (`:path`)\n"
"\n"
"  * `:path`        - the path for the dependency\n"
"  * `:in_umbrella` - when true, sets a path dependency pointing to\n"
"    \"../#{app}\", sharing the same environment as the current application\n"
"\n"
"## mix deps task\n"
"\n"
"This task lists all dependencies in the following format:\n"
"\n"
"    APP VERSION (SCM)\n"
"    [locked at REF]\n"
"    STATUS\n"
"\n"
"It supports the following options:\n"
"\n"
"  * `--all` - check all dependencies, regardless of specified environment\n"
"\n"
msgstr ""
