msgid ""
msgstr ""
"Project-Id-Version: l 10n_mix\n"
"PO-Revision-Date: 2015-05-20 22:52+0900\n"
"Last-Translator: 小田 照敬 <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: Elixir.Mix.Tasks.Compile.App Summary
#: lib/mix/tasks/compile.app.ex:1
msgid ""
"Writes an .app file.\n"
"\n"
"An `.app` file is a file containing Erlang terms that defines\n"
"your application. Mix automatically generates this file based on\n"
"your `mix.exs` configuration. You can learn more about OTP\n"
"applications by seeing the documentation for the `Application`\n"
"module.\n"
"\n"
"In order to generate the `.app` file, Mix expects your application\n"
"to have both `:app` and `:version` keys. Furthermore, you can\n"
"configure the generated application by defining an `application`\n"
"function in your `mix.exs` with the following options:\n"
"\n"
"  * `:applications` - all applications your application depends\n"
"    on at runtime. For example, if your application depends on\n"
"    Erlang's `:crypto`, it needs to be added to this list. Most\n"
"    of your dependencies must be added as well (unless they're\n"
"    a development or test dependency). Mix and other tools use this\n"
"    list in order to properly boot your application dependencies\n"
"    before starting the application itself.\n"
"\n"
"  * `:registered` - the name of all registered processes in the\n"
"    application. If your application defines a local GenServer\n"
"    with name `MyServer`, it is recommended to add `MyServer`\n"
"    to this list. It is mostly useful to detect conflicts in\n"
"    between applications that register the same names.\n"
"\n"
"  * `:mod` - specify a module to invoke when the application\n"
"    is started, it must be in the format `{Mod, args}` where\n"
"    args is often an empty list. The module specified here must\n"
"    implement the callbacks defined by the `Application`\n"
"    module.\n"
"\n"
"  * `:env` - default values for the application environment.\n"
"    The application environment is one of the most common ways\n"
"    to configure applications.\n"
"\n"
"Let's see an example `application` function:\n"
"\n"
"    def application do\n"
"      [mod: {MyApp, []},\n"
"       env: [default: :value],\n"
"       applications: [:crypto]]\n"
"    end\n"
"\n"
"Besides the options above, `.app` files also expects other\n"
"options like `:modules` and `:vsn`, but those are automatically\n"
"filled by Mix.\n"
"\n"
"## Command line options\n"
"\n"
"  * `--force` - forces compilation regardless of modification times\n"
"\n"
msgstr ""
